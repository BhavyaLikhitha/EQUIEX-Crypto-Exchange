openapi: 3.0.0
info:
  title: User Authentication and Profile Management API
  description: API for user authentication, registration, and profile management.
  version: 1.0.0
servers:
  - url: http://localhost:9000
    description: Local development envirornment
paths:
  /auth/login:
    post:
      summary: "User Login"
      description: "Authenticate a user with email and password."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: "The user's email address."
                  example: "user@example.com"
                password:
                  type: string
                  description: "The user's password."
                  example: "Password123!"
      responses:
        '200':
          description: "Successful authentication, returns user details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                id: "12345"
                name: "John Doe"
                email: "user@example.com"
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: "Invalid email or password."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errorCode: "INVALID_CREDENTIALS"
                message: "The provided email or password is incorrect."
        '404':
          description: "User not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errorCode: "USER_NOT_FOUND"
                message: "The user with the provided email does not exist."
  /auth/signup:
    post:
      summary: "User Signup"
      description: "Register a new user with email and password."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "The user's full name."
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  description: "The user's email address."
                  example: "user@example.com"
                password:
                  type: string
                  description: "The user's password."
                  example: "Password123!"
      responses:
        '201':
          description: "User successfully registered."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                id: "12345"
                name: "John Doe"
                email: "user@example.com"
        '400':
          description: "Invalid input or already registered email."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errorCode: "EMAIL_ALREADY_EXISTS"
                message: "The email address is already registered."
  /user/profile:
    get:
      summary: "Get User Profile"
      description: "Fetch the details of the authenticated user."
      responses:
        '200':
          description: "Successfully fetched user profile."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                id: "12345"
                name: "John Doe"
                email: "user@example.com"
        '401':
          description: "Unauthorized, missing or invalid authentication token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errorCode: "UNAUTHORIZED"
                message: "Authentication is required to access the profile."
    put:
      summary: "Update User Profile"
      description: "Update user profile details such as name, email, etc."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "The user's full name."
                  example: "John Doe Updated"
                email:
                  type: string
                  format: email
                  description: "The user's email address."
                  example: "updateduser@example.com"
      responses:
        '200':
          description: "Successfully updated the user profile."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                id: "12345"
                name: "John Doe Updated"
                email: "updateduser@example.com"
        '400':
          description: "Invalid input or data format."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errorCode: "INVALID_INPUT"
                message: "The data provided for the update is invalid."
        '401':
          description: "Unauthorized, missing or invalid authentication token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errorCode: "UNAUTHORIZED"
                message: "Authentication is required to update the profile."

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier of the user."
          example: "12345"
        name:
          type: string
          description: "Full name of the user."
          example: "John Doe"
        email:
          type: string
          description: "The user's email address."
          example: "user@example.com"
        token:
          type: string
          description: "JWT token used for authenticated requests."
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
          description: "Error code representing the issue."
          example: "INVALID_CREDENTIALS"
        message:
          type: string
          description: "Detailed message describing the error."
          example: "The provided email or password is incorrect."
    
      
