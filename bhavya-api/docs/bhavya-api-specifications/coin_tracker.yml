openapi: 3.0.0
info:
  title: Coin Tracker API
  description: API for managing coins and associating them with user trackers.
  version: 1.0.0
servers:
  - url: http://localhost:9000
    description: Local development environment

paths:
  /coins:
    post:
      summary: "Add a new coin"
      description: "Allows admin to add a new coin to the system."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Name of the coin."
                  example: "Bitcoin"
                symbol:
                  type: string
                  description: "Symbol of the coin."
                  example: "BTC"
                price:
                  type: number
                  format: float
                  description: "Current price of the coin."
                  example: 40000.00
      responses:
        '201':
          description: "Coin successfully added."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coin"
              example:
                id: "1"
                name: "Bitcoin"
                symbol: "BTC"
                price: 40000.00
        '400':
          description: "Invalid input."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    get:
      summary: "Get all available coins"
      description: "Retrieve a list of all coins in the system."
      responses:
        '200':
          description: "List of all coins."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Coin"
              example:
                - id: "1"
                  name: "Bitcoin"
                  symbol: "BTC"
                  price: 40000.00
                - id: "2"
                  name: "Ethereum"
                  symbol: "ETH"
                  price: 2500.00

  /coins/{name}:
    get:
      summary: "Get coin details"
      description: "Retrieve details of a specific coin by its name."
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: "The name of the coin."
          example: "Bitcoin"
      responses:
        '200':
          description: "Coin details retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coin"
              example:
                id: "1"
                name: "Bitcoin"
                symbol: "BTC"
                price: 40000.00
        '404':
          description: "Coin not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/{email}/coins:
    post:
      summary: "Add a coin to user's tracker"
      description: "Allows a user to add a coin to their tracker."
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: "The email of the user."
          example: "user@example.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Name of the coin."
                  example: "Bitcoin"
                symbol:
                  type: string
                  description: "Symbol of the coin."
                  example: "BTC"
                price:
                  type: number
                  format: float
                  description: "Price of the coin at the time of tracking."
                  example: 40000.00
                quantity:
                  type: number
                  format: float
                  description: "Quantity of the coin being tracked."
                  example: 2.0
      responses:
        '201':
          description: "Coin successfully added to user's tracker."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCoin"
              example:
                name: "Bitcoin"
                symbol: "BTC"
                price: 40000.00
                quantity: 2.0
        '404':
          description: "User not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    get:
      summary: "Get user's coin tracker"
      description: "Retrieve the list of coins tracked by a user."
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: "The email of the user."
          example: "user@example.com"
      responses:
        '200':
          description: "List of user's tracked coins."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserCoin"
              example:
                - name: "Bitcoin"
                  symbol: "BTC"
                  price: 40000.00
                  quantity: 2.0
                - name: "Ethereum"
                  symbol: "ETH"
                  price: 2500.00
                  quantity: 5.0
        '404':
          description: "User not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/{email}/coins/{name}:
    put:
      summary: "Edit a coin in user's tracker"
      description: "Allows a user to edit the details of a specific coin in their tracker."
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: "The email of the user."
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: "The name of the coin."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: number
                  format: float
                  description: "Updated price of the coin."
                  example: 45000.00
                quantity:
                  type: number
                  format: float
                  description: "Updated quantity of the coin."
                  example: 3.0
      responses:
        '200':
          description: "Coin successfully updated in user's tracker."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCoin"
        '404':
          description: "User or coin not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      summary: "Delete a coin from user's tracker"
      description: "Remove a specific coin from the user's tracker."
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Coin successfully removed from user's tracker."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        '404':
          description: "User or coin not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    Coin:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the coin."
        name:
          type: string
        symbol:
          type: string
        price:
          type: number
          format: float
    UserCoin:
      type: object
      properties:
        name:
          type: string
        symbol:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: number
          format: float
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
        message:
          type: string
