openapi: 3.0.0
info:
  title: Cryptocurrency Exchange Blog API
  version: 1.0.0
  description: API for managing blog posts in the cryptocurrency exchange platform.

paths:
  /blogs:
    get:
      summary: Retrieve a list of all blog posts
      responses:
        '200':
          description: A list of blog posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blog'
    post:
      summary: Create a new blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '201':
          description: Blog post created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'

  /blogs/{blogId}:
    get:
      summary: Retrieve a specific blog post by ID
      parameters:
        - name: blogId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the requested blog post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
        '404':
          description: Blog post not found

    put:
      summary: Update an existing blog post by ID
      parameters:
        - name: blogId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          description: Blog post updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
        '404':
          description: Blog post not found

    delete:
      summary: Delete a blog post by ID
      parameters:
        - name: blogId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Blog post deleted successfully
        '404':
          description: Blog post not found

  /blogs/author/{userId}:
    get:
      summary: Retrieve all blog posts authored by a specific user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of blog posts authored by the specified user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blog'
        '404':
          description: No blog posts found for the specified user

components:
  schemas:
    Blog:
      type: object
      properties:
        blogId:
          type: string
          format: uuid
          description: Unique identifier for the blog post
        title:
          type: string
          description: Title of the blog post
        content:
          type: string
          description: Content of the blog post
        author:
          type: object
          description: Author of the blog post
          properties:
            userId:
              type: string
              format: uuid
              description: Unique identifier of the author
            name:
              type: string
              description: Name of the author
        timestamp:
          type: string
          format: date-time
          description: Timestamp of when the blog was created or last updated
      required:
        - blogId
        - title
        - content
        - author
        - timestamp
